// keymap.json, generated at Thu Aug 08 2024 13:17:30 GMT+0800 (Singapore Standard Time)
[
  {
    "context": "Editor && inline_completion",
    "bindings": {
      "ctrl-y": "editor::AcceptInlineCompletion"
    }
  },
  {
    "context": "(ContextEditor > Editor) && vim_mode == normal && !VimWaiting && !menu",
    "bindings": {
      "space b": "assistant::NewContext",
      "space h": "assistant::DeployHistory"
    }
  },
  {
    "context": "KeyContextView",
    "bindings": {
      "ctrl-h": ["workspace::ActivatePaneInDirection", "Left"],
      "ctrl-l": ["workspace::ActivatePaneInDirection", "Right"],
      "shift-h": "pane::ActivatePrevItem",
      "shift-l": "pane::ActivateNextItem",
      "ctrl-w": "pane::CloseActiveItem"
    }
  },
  {
    "context": "vim_mode == insert",
    "bindings": {
      "ctrl-v": "editor::Paste"
    }
  },
  {
    "context": "BufferSearchBar > Editor",
    "use_key_equivalents": true,
    "bindings": {
      "ctrl-h": ["workspace::ActivatePaneInDirection", "Left"],
      "ctrl-l": ["workspace::ActivatePaneInDirection", "Right"]
    }
  },
  {
    "context": "Picker > Editor",
    "use_key_equivalents": true,
    "bindings": {
      "ctrl-h": ["workspace::ActivatePaneInDirection", "Left"],
      "ctrl-l": ["workspace::ActivatePaneInDirection", "Right"]
    }
  },
  {
    "context": "Editor && VimControl && !VimWaiting && !menu",
    "bindings": {
      // [...]
      "j": ["vim::Down", { "displayLines": true }],
      "k": ["vim::Up", { "displayLines": true }]
    }
  },
  {
    "context": "(Pane > Editor) && (vim_mode == normal || vim_mode == visual) && !VimWaiting && !menu",
    "bindings": {
      "space b": "workspace::NewFile",
      "space v": "pane::SplitLeft",
      "space h": "pane::SplitDown"
    }
  },
  {
    "context": "Editor && (vim_mode == normal || vim_mode == visual) && !VimWaiting && !menu",
    "bindings": {
      // put key-bindings here if you want them to work in normal & visual mode
      // Git
      "space Q": "workspace::CloseWindow",
      "space r h": "editor::RevertSelectedHunks",
      "space g b": "editor::ToggleGitBlameInline",
      "space g B": "editor::ToggleGitBlame",
      "alt-c": ["workspace::SendKeystrokes", "\" +"],
      // Toggle inlay hints
      "space l i": "editor::ToggleInlayHints",

      // Toggle soft wrap
      "alt-z": "editor::ToggleSoftWrap",

      // NOTE: Toggle Zen mode, not fully working yet
      "space c z": "workspace::ToggleCenteredLayout",

      // Open markdown preview
      "space m p": "markdown::OpenPreview",
      "space m P": "markdown::OpenPreviewToTheSide",

      // Open recent project
      "space f p": "projects::OpenRecent",
      // Search word under cursor
      "space f w": "pane::DeploySearch",

      // Chat with AI
      "space a c": "assistant::ToggleFocus",
      // Go to file with `gf`
      "g f": "editor::OpenExcerpts"
    }
  },
  {
    "context": "Editor && vim_mode == normal && !VimWaiting && !menu",
    "bindings": {
      // put key-bindings here if you want them to work only in normal mode
      // Window movement bindings
      // Ctrl jklk to move between panes
      "ctrl-h": ["workspace::ActivatePaneInDirection", "Left"],
      "ctrl-l": ["workspace::ActivatePaneInDirection", "Right"],
      "ctrl-k": ["workspace::ActivatePaneInDirection", "Up"],
      "ctrl-j": ["workspace::ActivatePaneInDirection", "Down"],

      "space t d": "editor::ToggleHunkDiff",
      "space q": "pane::CloseAllItems",

      ";": "command_palette::Toggle",

      // +LSP
      "space c a": "editor::ToggleCodeActions",
      "space r a": "editor::Rename",
      "g d": "editor::GoToDefinition",
      "g D": "editor::GoToDefinitionSplit",
      "g i": "editor::GoToImplementation",
      "g I": "editor::GoToImplementationSplit",
      "g t": "editor::GoToTypeDefinition",
      "g T": "editor::GoToTypeDefinitionSplit",
      "g r": "editor::FindAllReferences",
      "] d": "editor::GoToDiagnostic",
      "[ d": "editor::GoToPrevDiagnostic",
      // Diagnostic
      "space l t": "diagnostics::Deploy",

      // +Git
      // Git prev/next hunk
      "] c": "editor::GoToHunk",
      "[ c": "editor::GoToPrevHunk",

      // + Buffers
      // Switch between buffers
      "shift-h": "pane::ActivatePrevItem",
      "shift-l": "pane::ActivateNextItem",
      // Close active panel
      "space x": "pane::CloseActiveItem",
      // Close other items
      "space X": "pane::CloseInactiveItems",
      // Save file
      "ctrl-s": "workspace::Save",
      // File finder
      "space space": "file_finder::Toggle",
      "space f f": "file_finder::Toggle",
      // TODO: Open other files
      // Show project panel with current file
      "space e": "pane::RevealInProjectPanel"
    }
  },
  // Empty pane, set of keybindings that are available when there is no active editor
  // Comment code
  {
    "context": "Editor && vim_mode == visual && !VimWaiting && !menu",
    "bindings": {
      // visual, visual line & visual block modes
      "g c": "editor::ToggleComments"
    }
  },
  // Navigation in insert mode
  {
    "context": "Editor && vim_mode == insert && !menu",
    "bindings": {
      "ctrl-l": "vim::Right",
      "ctrl-h": "vim::Left",
      "ctrl-j": "vim::Down",
      "ctrl-k": "vim::Up",
      "ctrl-b": "editor::MoveToBeginningOfLine",
      "ctrl-e": "editor::MoveToEndOfLine"
    }
  },
  // Toggle terminal
  {
    "context": "Workspace",
    "bindings": {
      "alt-h": "workspace::ToggleBottomDock",
      "ctrl-tab": "pane::ActivateNextItem",
      "ctrl-shift-tab": "pane::ActivatePrevItem"
    }
  },
  {
    "context": "Terminal",
    "bindings": {
      "ctrl-n": null,
      "ctrl-p": null,
      "ctrl-x": "terminal_panel::ToggleFocus"
    }
  },
  // File panel (netrw)
  {
    "context": "ProjectPanel && not_editing",
    "bindings": {
      "a": "project_panel::NewFile",
      "A": "project_panel::NewDirectory",
      "r": "project_panel::Rename",
      "d": "project_panel::Delete",
      "x": "project_panel::Cut",
      "c": "project_panel::Copy",
      "p": "project_panel::Paste",
      // Close project panel as project file panel on the right
      "q": "workspace::ToggleRightDock",
      "ctrl-n": "workspace::ToggleRightDock",
      "ctrl-alt-n": "workspace::ToggleLeftDock",
      "space Q": "workspace::CloseWindow",
      "space f f": "file_finder::Toggle",
      "space space": "file_finder::Toggle",
      "space f p": "projects::OpenRecent"
    }
  },
  // Panel nagivation
  {
    "context": "(Dock || EmptyPane) && vim_mode == normal",
    "bindings": {
      "space Q": "workspace::CloseWindow",
      "space space": "file_finder::Toggle",
      "space f p": "projects::OpenRecent",
      "space f f": "file_finder::Toggle"
    }
  },
  {
    "context": "Workspace",
    "bindings": {
      // Map VSCode like keybindings
      "ctrl-n": "workspace::ToggleRightDock",
      "ctrl-alt-n": "workspace::ToggleLeftDock"
    }
  },
  {
    "context": "AssistantPanel",
    "bindings": {
      "ctrl-n": "workspace::ToggleRightDock"
    }
  },
  {
    "context": "Editor && VimControl && !VimWaiting && !menu",
    "bindings": {
      // put key-bindings here if you want them to work in normal & visual mode
      "space /": "editor::ToggleComments",
      "alt-j": "editor::MoveLineDown",
      "alt-k": "editor::MoveLineUp",
      "space f m": "editor::Format",
      "enter": "editor::SelectLargerSyntaxNode"
    }
  },
  {
    "context": "Dock || EmptyPane || vim_mode == visual",
    "bindings": {
      "ctrl-h": ["workspace::ActivatePaneInDirection", "Left"],
      "ctrl-l": ["workspace::ActivatePaneInDirection", "Right"],
      "ctrl-k": ["workspace::ActivatePaneInDirection", "Up"],
      "ctrl-j": ["workspace::ActivatePaneInDirection", "Down"]
    }
  },
  {
    "context": "EmptyPane",
    "bindings": {
      "space f p": "projects::OpenRecent",
      "space Q": "workspace::CloseWindow",
      "space space": "file_finder::Toggle",
      "space f f": "file_finder::Toggle",
      "ctrl-o": "pane::GoBack"
    }
  }
]
