// Place your key bindings in this file to override the defaultsauto[]
[
  {
    "key": "ctrl+h",
    "command": "workbench.action.navigateLeft",
    "when": "(vim.mode != 'Insert' && editorTextFocus)"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.navigateRight",
    "when": "vim.mode != 'Insert' && editorTextFocus"
  },
  {
    "key": "ctrl+y",
    "command": "editor.action.inlineSuggest.commit",
    "when": "vim.mode == 'Insert' && editorTextFocus"
  },
  {
    "key": "ctrl+l",
    "command": "cursorRight",
    "when": "vim.mode == 'Insert' && editorTextFocus"
  },
  {
    "key": "ctrl+h",
    "command": "cursorLeft",
    "when": "vim.mode == 'Insert' && editorTextFocus"
  },
  {
    "key": "ctrl+e",
    "command": "hideSuggestWidget",
    "when": "vim.mode == 'Insert' && editorTextFocus"
  },
  {
    "command": "workbench.action.navigateUp",
    "key": "ctrl+k"
  },
  {
    "command": "workbench.action.navigateDown",
    "key": "ctrl+j"
  },
  {
    "command": "workbench.action.navigateEditorGroups",
    "key": "ctrl+k",
    "when": "inOutput"
  },
  {
    "command": "workbench.action.previousEditor",
    "key": "ctrl+shift+tab"
  },
  {
    "command": "workbench.action.nextEditor",
    "key": "ctrl+tab"
  },
  {
    "key": "ctrl+tab",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus"
  },
  {
    "command": "editor.action.moveLinesUpAction",
    "key": "alt+k",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "editor.action.moveLinesDownAction",
    "key": "alt+j",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+h",
    "command": "workbench.action.togglePanel"
  },
  {
    "key": "alt+c",
    "command": "vim.remap",
    "args": {
      "after": [
        "\"",
        "+"
      ]
    },
    "when": "(vim.mode == 'Normal' || vim.mode == 'Visual' || vim.mode == 'VisualLine') && editorTextFocus"
  },
  {
    "command": "welcome.showNewFileEntries",
    "key": "alt+b"
  },
  {
    "key": "shift+k",
    "command": "editor.action.showHover",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  // File Explorer
  {
    "key": "r",
    "command": "renameFile",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "c",
    "command": "filesExplorer.copy",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "p",
    "command": "filesExplorer.paste",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "x",
    "command": "filesExplorer.cut",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "d",
    "command": "deleteFile",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "a",
    "command": "explorer.newFile",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  // Suggestions
  {
    "command": "selectNextSuggestion",
    "key": "ctrl+n",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "command": "selectNextCodeAction",
    "key": "ctrl+n",
    "when": "codeActionMenuVisible"
  },
  {
    "command": "selectPrevCodeAction",
    "key": "ctrl+p",
    "when": "codeActionMenuVisible"
  },
  {
    "command": "selectPrevSuggestion",
    "key": "ctrl+p",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+n",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "!suggestWidgetVisible && !codeActionMenuVisible"
  },
  {
    "command": "workbench.action.toggleAuxiliaryBar",
    "key": "ctrl+alt+n"
  },
  {
    "key": "h",
    "command": "editor.action.scrollLeftHover",
    "when": "editorHoverFocused"
  },
  {
    "command": "editor.action.scrollDownHover",
    "key": "j",
    "when": "editorHoverFocused"
  },
  {
    "command": "editor.action.scrollUpHover",
    "key": "k",
    "when": "editorHoverFocused"
  },
  {
    "command": "editor.action.scrollRightHover",
    "key": "l",
    "when": "editorHoverFocused"
  },
  {
    "command": "workbench.action.quickOpenSelectNext",
    "key": "ctrl+n",
    "when": "inQuickOpen"
  },
  {
    "command": "workbench.action.quickOpenSelectPrevious",
    "key": "ctrl+p",
    "when": "inQuickOpen"
  },
  {
    "command": "workbench.action.quickOpen",
    "key": "ctrl+p",
    "when": "!suggestWidgetVisible && !terminalFocus && !inQuickOpen && !codeActionMenuVisible"
  },
  {
    "command": "workbench.action.toggleActivityBarVisibility",
    "key": "alt+n"
  },
  {
    "command": "-workbench.action.quickOpen",
    "key": "ctrl+p"
  },
  {
    "command": "inlineChat.start",
    "key": "alt+i",
    "when": "editorFocus && inlineChatHasProvider && !editorReadonly"
  },
  {
    "command": "-inlineChat.start",
    "key": "ctrl+i",
    "when": "editorFocus && inlineChatHasProvider && !editorReadonly"
  },
  {
    "command": "workbench.action.chat.openInEditor",
    "key": "shift+alt+i"
  },
  {
    "key": "ctrl+o",
    "command": "workbench.action.openPreviousEditorFromHistory",
    "when": "!editorFocus"
  },
  {
    "key": "enter",
    "command": "-python.execInREPLEnter",
    "when": "!config.interactiveWindow.executeWithShiftEnter && !inlineChatFocused && activeEditor == 'workbench.editor.repl'"
  },
  {
    "key": "enter",
    "command": "-repl.execute",
    "when": "!config.interactiveWindow.executeWithShiftEnter && activeEditor == 'workbench.editor.repl'"
  },
  {
    "key": "escape",
    "command": "-interactive.input.clear",
    "when": "isCompositeNotebook && !LinkedEditingInputVisible && !accessibilityHelpWidgetVisible && !breakpointWidgetVisible && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible && !exceptionWidgetVisible && !findWidgetVisible && !inSnippetMode && !inlineChatVisible && !isComposing && !markersNavigationVisible && !notebookEditorFocused && !notificationToastsVisible && !parameterHintsVisible && !renameInputVisible && !selectionAnchorSet && !suggestWidgetVisible"
  },
  {
    "key": "enter",
    "command": "-python.execInInteractiveWindowEnter",
    "when": "!config.interactiveWindow.executeWithShiftEnter && !inlineChatFocused && activeEditor == 'workbench.editor.interactive'"
  },
  {
    "key": "shift+alt+enter",
    "command": "github.copilot.generate",
    "when": "editorTextFocus && github.copilot.activated && !commentEditorFocused && !inInteractiveInput && !interactiveEditorFocused"
  },
  {
    "key": "ctrl+enter",
    "command": "-github.copilot.generate",
    "when": "editorTextFocus && github.copilot.activated && !commentEditorFocused && !inInteractiveInput && !interactiveEditorFocused"
  },
  {
    "key": "ctrl+enter",
    "command": "-editor.action.insertLineAfter",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+/",
    "command": "workbench.action.chat.open"
  },
  {
    "key": "ctrl+alt+i",
    "command": "-workbench.action.chat.open"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.action.navigateLeft",
    "when": "auxiliaryBarFocus || sideBarFocus"
  },
  {
    "key": "ctrl+l",
    "command": "-workbench.action.chat.newChat",
    "when": "chatIsEnabled && inChat"
  },
  {
    "key": "ctrl+l",
    "command": "-workbench.action.chat.newChat",
    "when": "chatIsEnabled && inChat && chatLocation != 'editing-session'"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.navigateRight",
    "when": "auxiliaryBarFocus || sideBarFocus"
  },
  {
    "key": "ctrl+i",
    "command": "-workbench.action.chat.startVoiceChat",
    "when": "chatIsEnabled && hasSpeechProvider && inChatInput && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress && !terminalChatActiveRequest || chatIsEnabled && hasSpeechProvider && inlineChatFocused && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress && !terminalChatActiveRequest"
  },
  {
    "key": "l",
    "command": "-notebook.cell.toggleLineNumbers",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "ctrl+enter",
    "command": "-editor.action.inlineSuggest.commit",
    "when": "editorTextFocus && inlineEditIsVisible && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || editorTextFocus && inlineEditIsVisible && inlineSuggestionVisible && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible"
  },
  {
    "key": "shift+escape",
    "command": "workbench.action.toggleMaximizedPanel",
    "when": "panelFocus && panelVisible"
  },
  {
    "key": "ctrl+h",
    "command": "-editor.action.startFindReplaceAction",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "key": "ctrl+l",
    "command": "-expandLineSelection",
    "when": "textInputFocus"
  },
  {
    "key": "shift+l",
    "command": "-notebook.toggleLineNumbers",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "f",
    "command": "-notebook.find",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "alt+,",
    "command": "workbench.action.increaseViewWidth"
  },
  {
    "key": "shift+alt+,",
    "command": "workbench.action.increaseViewHeight"
  },
  {
    "key": "alt+.",
    "command": "workbench.action.decreaseViewWidth"
  },
  {
    "key": "shift+alt+.",
    "command": "-editor.action.autoFix",
    "when": "textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
  },
  {
    "key": "shift+alt+.",
    "command": "workbench.action.decreaseViewHeight"
  },
  {
    "key": "alt+shift+y",
    "command": "moveActiveEditor",
    "args": {
      "to": "left"
    }
  },
  {
    "key": "alt+shift+o",
    "command": "moveActiveEditor",
    "args": {
      "to": "right"
    }
  },
  {
    "key": "z a",
    "command": "notebook.fold",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "z shift+a",
    "command": "notebook.unfold",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.action.navigateLeft",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.navigateRight",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.navigateRight",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "shift+l",
    "command": "workbench.action.nextEditorInGroup",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "shift+h",
    "command": "workbench.action.previousEditorInGroup",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "shift+x",
    "command": "workbench.action.closeOtherEditors",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.action.navigateLeft",
    "when": "searchInputBoxFocus"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.navigateRight",
    "when": "searchInputBoxFocus"
  },
  {
    "key": "shift+enter",
    "command": "-notebook.cell.executeAndSelectBelow",
    "when": "notebookCellListFocused && !inlineChatFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0"
  },
  {
    "key": "shift+enter",
    "command": "-notebook.cell.executeAndSelectBelow",
    "when": "notebookCellListFocused && !interactiveEditorFocused && notebookCellType == 'code' || editorTextFocus && inputFocus && notebookEditorFocused && !interactiveEditorFocused"
  },
  {
    "key": "enter",
    "command": "-repl.execute",
    "when": "isCompositeNotebook && !config.interactiveWindow.executeWithShiftEnter && !notebookCellListFocused && activeEditor == 'workbench.editor.repl'"
  },
  {
    "key": "ctrl+enter",
    "command": "repl.execute",
    "when": "isCompositeNotebook && !config.interactiveWindow.executeWithShiftEnter && !notebookCellListFocused && activeEditor == 'workbench.editor.repl'"
  },
  {
    "key": "ctrl+e",
    "command": "-workbench.action.quickOpen"
  },
    {
    "key": "ctrl+i",
    "command": "-inlineChat.startWithCurrentLine",
    "when": "inlineChatHasProvider && inlineChatShowingHint && !editorReadonly && !inlineChatVisible"
  },
  {
    "key": "alt+i",
    "command": "inlineChat.start",
    "when": "editorFocus && inlineChatHasEditsAgent && inlineChatPossible && !editorReadonly && !editorSimpleInput || editorFocus && inlineChatHasProvider && inlineChatPossible && !editorReadonly && !editorSimpleInput"
  },
  {
    "key": "ctrl+i",
    "command": "-inlineChat.start",
    "when": "editorFocus && inlineChatHasEditsAgent && inlineChatPossible && !editorReadonly && !editorSimpleInput || editorFocus && inlineChatHasProvider && inlineChatPossible && !editorReadonly && !editorSimpleInput"
  },
  {
    "key": "ctrl+a",
    "command": "-editor.action.selectAll",
    "when": "vim.mode == 'Normal'"
  },
  {
    "key": "ctrl+shift+w",
    "command": "-workbench.action.closeWindow"
  },
  {
    "key": "ctrl+shift+w",
    "command": "workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.closeActiveEditor"
  },
  {
    "key": "shift+escape",
    "command": "workbench.action.toggleMaximizedAuxiliaryBar",
    "when": "auxiliaryBarFocus"
  },
  {
    "key": "ctrl+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  {
    "key": "enter",
    "command": "-repl.action.acceptInput",
    "when": "inDebugRepl && textInputFocus"
  },
  {
    "key": "ctrl+enter",
    "command": "repl.action.acceptInput",
    "when": "inDebugRepl && textInputFocus"
  },
  {
    "key": "enter",
    "command": "acceptSelectedSuggestion",
    "when": "suggestWidgetHasFocusedSuggestion && inDebugRepl"
  },
  {
    "key": "ctrl+w",
    "command": "deleteWordLeft",
    "when": "textInputFocus && !editorReadonly && !(editorFocus && vim.mode != 'Insert')"
  },
  {
    "command": "workbench.action.closeQuickOpen",
    "key": "ctrl+w",
    "when": "inQuickOpen"
  },
]
